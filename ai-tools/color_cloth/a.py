colors = {
    '红色': '255,0,0',
    '深粉色': '255,0,128',
    '紫红色': '255,0,225',
    '橙色': '255,128,0',
    '野蔷薇红': '255,128,128',
    '紫罗兰': '255,128,255',
    '黄色': '255,255,0',
    '淡茧黄': '255,255,128',
    '白色': '255,255,255',
    '粟色': '128,0,0',
    '紫色': '128,0,128',
    '深紫罗兰色': '128,0,255',
    '橄榄色': '128,128,0',
    '灰色': '128,128,128',
    '秋波蓝': '128,128,255',
    '查特酒绿': '128,255,0',
    '碧绿色': '128,255,128',
    '水绿色': '128,255,255',
    '黑色': '0,0,0',
    '海军色': '0,0,128',
    '蓝色': '0,0,255',
    '绿色': '0,128,0',
    '水鸭色': '0,128,128',
    '深天蓝': '0,128,255',
    '酸橙色': '0,255,0',
    '浅绿色': '0,255,255',
    '春绿色': '0,255,128',
}

nums = [0, 128, 255]


def func(l, a):
    hi = len(l) - 1  # 最后一个索引
    if hi == -1:  # 空列表
        return '列表不能为空'
    elif hi == 0:  # 只有一个元素
        return l[0]
    else:
        lo = 0  # 第一个索引
        while lo < hi:  # 二分法
            mid = (lo + hi) // 2
            if a == l[mid]:
                return l[mid]  # 相等直接返回
            elif a < l[mid]:
                hi = mid
            else:
                lo = mid + 1
        if lo == 0:  # 排在第一个时
            return l[0]
        elif lo == len(l) - 1:  # 排在最后一个时
            return l[lo]
        else:
            return min(l[lo - 1], l[lo], key=lambda x: abs(x - a))


if __name__ == '__main__':
    a = func(nums, 256)
