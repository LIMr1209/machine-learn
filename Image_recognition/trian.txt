一 环境准确
   Python3.6  Pytorch1.1.0(机器学习框架) nvidia显卡(GPU)  tensorboard(可视化) sklearn
二 数据准备
  1.将图片文件按照标签分类, 使用sklearn随机按照一定比例划分为训练集,验证集,测试集
  2.将图片数据进行随机旋转,及裁剪,进行归一化处理 
  3.使用pytorch的数据加载器 加载图片数据 
三 神经网络
  1.使用pytorch建立预训练的resnet152深度残差网络
四 训练
  1.定义训练次数,学习效率
  2.迭代图片数据,将图片tensor 输入到网络 ,输出该图片属于某个标签的概率
  3.使用交叉熵损失函数计算输出以及正确标签的损失值
  4.反向传播以及实用Adam优化器更新神经网络各个层数的权重值
  5.当迭代完成一次训练集后,迭代验证集,记录TOP1准确率和TOP5准确率
  6.保存神经网络模型参数,优化器参数,迭代次数,TOP1准确率 和 损失值
  7.继续执行1-6 当损失值下降不明显时,适当减少优化器的学习效率
  8.当准确率上升时,保存模型,下降时,不保存模型
五 测试
  1.迭代测试集到网络 计算TOP1准确率  TOP5准确率
六 识别
  1.使用pytorch建立预训练的resnet152深度残差网络
  2.加载保存的模型参数到resnet152
  3.对图片进行数据增强 转化为tensor张量
  4.将tensor输入到网络,计算出对应的标签


